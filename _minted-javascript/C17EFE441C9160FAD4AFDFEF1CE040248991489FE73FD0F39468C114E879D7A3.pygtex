\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{n+nx}{library}\PYG{p}{.}\PYG{n+nx}{js}
\PYG{k+kr}{const} \PYG{n+nx}{store} \PYG{o}{=} \PYG{p}{\PYGZob{}}
  \PYG{n+nx}{sunglasses}\PYG{o}{:} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{inventory}\PYG{o}{:} \PYG{l+m+mi}{817}\PYG{p}{,}
    \PYG{n+nx}{cost}\PYG{o}{:} \PYG{l+m+mf}{9.99}
  \PYG{p}{\PYGZcb{}}\PYG{p}{,}
  \PYG{n+nx}{pants}\PYG{o}{:} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{inventory}\PYG{o}{:} \PYG{l+m+mi}{236}\PYG{p}{,}
    \PYG{n+nx}{cost}\PYG{o}{:} \PYG{l+m+mf}{7.99}
  \PYG{p}{\PYGZcb{}}\PYG{p}{,}
  \PYG{n+nx}{bags}\PYG{o}{:} \PYG{p}{\PYGZob{}}
    \PYG{n+nx}{inventory}\PYG{o}{:} \PYG{l+m+mi}{17}\PYG{p}{,}
    \PYG{n+nx}{cost}\PYG{o}{:} \PYG{l+m+mf}{12.99}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}\PYG{p}{;}

\PYG{k+kr}{const} \PYG{n+nx}{checkInventory} \PYG{o}{=} \PYG{p}{(}\PYG{n+nx}{order}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
  \PYG{k}{return} \PYG{k}{new} \PYG{n+nb}{Promise} \PYG{p}{(}\PYG{p}{(}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
   \PYG{n+nx}{setTimeout}\PYG{p}{(}\PYG{p}{(}\PYG{p}{)}\PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
   \PYG{k+kr}{const} \PYG{n+nx}{itemsArr} \PYG{o}{=} \PYG{n+nx}{order}\PYG{p}{.}\PYG{n+nx}{items}\PYG{p}{;}
   \PYG{k+kd}{let} \PYG{n+nx}{inStock} \PYG{o}{=} \PYG{n+nx}{itemsArr}\PYG{p}{.}\PYG{n+nx}{every}\PYG{p}{(}\PYG{n+nx}{item} \PYG{p}{=\PYGZgt{}} \PYG{n+nx}{store}\PYG{p}{[}\PYG{n+nx}{item}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{]}\PYG{p}{.}\PYG{n+nx}{inventory} \PYG{o}{\PYGZgt{}=} \PYG{n+nx}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{)}\PYG{p}{;}

   \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{inStock}\PYG{p}{)}\PYG{p}{\PYGZob{}}
     \PYG{k+kd}{let} \PYG{n+nx}{total} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
     \PYG{n+nx}{itemsArr}\PYG{p}{.}\PYG{n+nx}{forEach}\PYG{p}{(}\PYG{n+nx}{item} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
       \PYG{n+nx}{total} \PYG{o}{+=} \PYG{n+nx}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{o}{*} \PYG{n+nx}{store}\PYG{p}{[}\PYG{n+nx}{item}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{]}\PYG{p}{.}\PYG{n+nx}{cost}
     \PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
     \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+sb}{`}\PYG{l+s+sb}{All of the items are in stock. The total cost of the order is }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{total}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{.}\PYG{l+s+sb}{`}\PYG{p}{)}\PYG{p}{;}
     \PYG{n+nx}{resolve}\PYG{p}{(}\PYG{p}{[}\PYG{n+nx}{order}\PYG{p}{,} \PYG{n+nx}{total}\PYG{p}{]}\PYG{p}{)}\PYG{p}{;}
   \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
     \PYG{n+nx}{reject}\PYG{p}{(}\PYG{l+s+sb}{`}\PYG{l+s+sb}{The order could not be completed because some items are sold out.}\PYG{l+s+sb}{`}\PYG{p}{)}\PYG{p}{;}
   \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}\PYG{p}{,} \PYG{n+nx}{generateRandomDelay}\PYG{p}{(}\PYG{p}{)}\PYG{p}{)}\PYG{p}{;}
 \PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}\PYG{p}{;}

\PYG{k+kr}{const} \PYG{n+nx}{processPayment} \PYG{o}{=} \PYG{p}{(}\PYG{n+nx}{responseArray}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
  \PYG{k+kr}{const} \PYG{n+nx}{order} \PYG{o}{=} \PYG{n+nx}{responseArray}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{;}
  \PYG{k+kr}{const} \PYG{n+nx}{total} \PYG{o}{=} \PYG{n+nx}{responseArray}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{;}
  \PYG{k}{return} \PYG{k}{new} \PYG{n+nb}{Promise} \PYG{p}{(}\PYG{p}{(}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
   \PYG{n+nx}{setTimeout}\PYG{p}{(}\PYG{p}{(}\PYG{p}{)}\PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
   \PYG{k+kd}{let} \PYG{n+nx}{hasEnoughMoney} \PYG{o}{=} \PYG{n+nx}{order}\PYG{p}{.}\PYG{n+nx}{giftcardBalance} \PYG{o}{\PYGZgt{}=} \PYG{n+nx}{total}\PYG{p}{;}
   \PYG{c+c1}{// For simplicity we\PYGZsq{}ve omited a lot of functionality}
   \PYG{c+c1}{// If we were making more realistic code, we would want to update the giftcardBalance and the inventory}
   \PYG{k}{if} \PYG{p}{(}\PYG{n+nx}{hasEnoughMoney}\PYG{p}{)} \PYG{p}{\PYGZob{}}
     \PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+sb}{`}\PYG{l+s+sb}{Payment processed with giftcard. Generating shipping label.}\PYG{l+s+sb}{`}\PYG{p}{)}\PYG{p}{;}
     \PYG{k+kd}{let} \PYG{n+nx}{trackingNum} \PYG{o}{=} \PYG{n+nx}{generateTrackingNumber}\PYG{p}{(}\PYG{p}{)}\PYG{p}{;}
     \PYG{n+nx}{resolve}\PYG{p}{(}\PYG{p}{[}\PYG{n+nx}{order}\PYG{p}{,} \PYG{n+nx}{trackingNum}\PYG{p}{]}\PYG{p}{)}\PYG{p}{;}
   \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
     \PYG{n+nx}{reject}\PYG{p}{(}\PYG{l+s+sb}{`}\PYG{l+s+sb}{Cannot process order: giftcard balance was insufficient.}\PYG{l+s+sb}{`}\PYG{p}{)}\PYG{p}{;}
   \PYG{p}{\PYGZcb{}}

\PYG{p}{\PYGZcb{}}\PYG{p}{,} \PYG{n+nx}{generateRandomDelay}\PYG{p}{(}\PYG{p}{)}\PYG{p}{)}\PYG{p}{;}
 \PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}\PYG{p}{;}

\PYG{k+kr}{const} \PYG{n+nx}{shipOrder} \PYG{o}{=} \PYG{p}{(}\PYG{n+nx}{responseArray}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
  \PYG{k+kr}{const} \PYG{n+nx}{order} \PYG{o}{=} \PYG{n+nx}{responseArray}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{p}{;}
  \PYG{k+kr}{const} \PYG{n+nx}{trackingNum} \PYG{o}{=} \PYG{n+nx}{responseArray}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{p}{;}
  \PYG{k}{return} \PYG{k}{new} \PYG{n+nb}{Promise} \PYG{p}{(}\PYG{p}{(}\PYG{n+nx}{resolve}\PYG{p}{,} \PYG{n+nx}{reject}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
   \PYG{n+nx}{setTimeout}\PYG{p}{(}\PYG{p}{(}\PYG{p}{)}\PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
     \PYG{n+nx}{resolve}\PYG{p}{(}\PYG{l+s+sb}{`}\PYG{l+s+sb}{The order has been shipped. The tracking number is: }\PYG{l+s+si}{\PYGZdl{}\PYGZob{}}\PYG{n+nx}{trackingNum}\PYG{l+s+si}{\PYGZcb{}}\PYG{l+s+sb}{.}\PYG{l+s+sb}{`}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}\PYG{p}{,} \PYG{n+nx}{generateRandomDelay}\PYG{p}{(}\PYG{p}{)}\PYG{p}{)}\PYG{p}{;}
 \PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}\PYG{p}{;}

\PYG{c+c1}{// This function generates a random number to serve as a \PYGZdq{}tracking number\PYGZdq{} on the shipping label. In real life this wouldn\PYGZsq{}t be a random number}
\PYG{k+kd}{function} \PYG{n+nx}{generateTrackingNumber}\PYG{p}{(}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{k}{return} \PYG{n+nb}{Math}\PYG{p}{.}\PYG{n+nx}{floor}\PYG{p}{(}\PYG{n+nb}{Math}\PYG{p}{.}\PYG{n+nx}{random}\PYG{p}{(}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{1000000}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// This function generates a random number to serve as delay in a setTimeout() since real asynchrnous operations take variable amounts of time}
\PYG{k+kd}{function} \PYG{n+nx}{generateRandomDelay}\PYG{p}{(}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{k}{return} \PYG{n+nb}{Math}\PYG{p}{.}\PYG{n+nx}{floor}\PYG{p}{(}\PYG{n+nb}{Math}\PYG{p}{.}\PYG{n+nx}{random}\PYG{p}{(}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{2000}\PYG{p}{)}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{n+nx}{module}\PYG{p}{.}\PYG{n+nx}{exports} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{n+nx}{checkInventory}\PYG{p}{,} \PYG{n+nx}{processPayment}\PYG{p}{,} \PYG{n+nx}{shipOrder}\PYG{p}{\PYGZcb{}}\PYG{p}{;}
\end{Verbatim}
