\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k+kr}{const} \PYG{n+nx}{http} \PYG{o}{=} \PYG{n+nx}{require}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}http\PYGZsq{}}\PYG{p}{)}\PYG{p}{;}

\PYG{n+nx}{http}\PYG{p}{.}\PYG{n+nx}{createServer}\PYG{p}{(}\PYG{p}{(}\PYG{n+nx}{request}\PYG{p}{,} \PYG{n+nx}{response}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
	\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{method}\PYG{p}{)}\PYG{p}{;}
	\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{url}\PYG{p}{)}\PYG{p}{;}

	\PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{on}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,} \PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
		\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{error}\PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)}\PYG{p}{;}
		\PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{statusCode} \PYG{o}{=} \PYG{l+m+mi}{400}\PYG{p}{;}
		\PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{end}\PYG{p}{(}\PYG{p}{)}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
	\PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{on}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}error\PYGZsq{}}\PYG{p}{,} \PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
		\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{error}\PYG{p}{(}\PYG{n+nx}{err}\PYG{p}{)}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{;}
	\PYG{k}{if}\PYG{p}{(}\PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{method} \PYG{o}{===} \PYG{l+s+s1}{\PYGZsq{}POST\PYGZsq{}} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{url} \PYG{o}{===} \PYG{l+s+s1}{\PYGZsq{}/echo\PYGZsq{}}\PYG{p}{)}\PYG{p}{\PYGZob{}}
		\PYG{c+c1}{// let body = [];}
		\PYG{c+c1}{// request.on(\PYGZsq{}data\PYGZsq{}, (chunk) =\PYGZgt{} \PYGZob{}}
		\PYG{c+c1}{//     body.push(chunk);}
		\PYG{c+c1}{// \PYGZcb{}).on(\PYGZsq{}end\PYGZsq{}, () =\PYGZgt{} \PYGZob{}}
		\PYG{c+c1}{//     body = Buffer.concat(body).toString();}
		\PYG{c+c1}{//     response.writeHead(200, \PYGZob{}\PYGZsq{}Content\PYGZhy{}Type\PYGZsq{}: \PYGZsq{}text/plain\PYGZsq{}\PYGZcb{});}
		\PYG{c+c1}{//     response.end(body);}
		\PYG{c+c1}{// \PYGZcb{});}
		\PYG{n+nx}{request}\PYG{p}{.}\PYG{n+nx}{pipe}\PYG{p}{(}\PYG{n+nx}{response}\PYG{p}{)}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}\PYG{k}{else} \PYG{p}{\PYGZob{}}
		\PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{statusCode} \PYG{o}{=} \PYG{l+m+mi}{404}\PYG{p}{;}
		\PYG{n+nx}{response}\PYG{p}{.}\PYG{n+nx}{end}\PYG{p}{(}\PYG{p}{)}\PYG{p}{;}
	\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}\PYG{p}{)}\PYG{p}{.}\PYG{n+nx}{listen}\PYG{p}{(}\PYG{l+m+mi}{8080}\PYG{p}{)}\PYG{p}{;}

\PYG{n+nx}{console}\PYG{p}{.}\PYG{n+nx}{log}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Server listening on port 8080\PYGZsq{}}\PYG{p}{)}\PYG{p}{;}
\end{Verbatim}
